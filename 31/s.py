val = '59787832768373756387231168493208357132958685401595722881580547807942982606755215622050260150447434057354351694831693219006743316964757503791265077635087624100920933728566402553345683177887856750286696687049868280429551096246424753455988979991314240464573024671106349865911282028233691096263590173174821612903373057506657412723502892841355947605851392899875273008845072145252173808893257256280602945947694349746967468068181317115464342687490991674021875199960420015509224944411706393854801616653278719131946181597488270591684407220339023716074951397669948364079227701367746309535060821396127254992669346065361442252620041911746738651422249005412940728'
#val = '12345678'
#val = '80871224585914546619083218645595'

val = [int(c) for c in val]

def pattern(n, length):
    base = [0, 1, 0, -1]
    expanded = []
    for b in base:
        expanded.extend([b] * n)
    batches = length // len(expanded)
    batches += 3  # for good measure...
    final = (expanded * batches)[1:length+1]
    return final


def fft(val):
    next_val = []
    for n in range(1, len(val)+1):
        s = 0
        pat = pattern(n, len(val))
        for p, d in zip(pat, val):
            s += p * d
        next_val.append(int(str(s)[-1]))
    return next_val


for i in range(100):
    val = fft(val)
    answer = ''.join([str(v) for v in val])
    print('After', i+1, 'phases:', answer)

print('Final:', answer[:8])

